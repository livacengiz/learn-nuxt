{"_path":"/components","_dir":"","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Components","description":"Components are reusable pieces which can be created manually using built in\ncomponents. Creating components gives you flexibility in designing your UI.\nTo create a component, create a vue file in .theme/components directory.","position":4,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"components"},"children":[{"type":"text","value":"Components"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Components are reusable pieces which can be created manually using built in\ncomponents. Creating components gives you flexibility in designing your UI.\nTo create a component, create a vue file in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/components"}]},{"type":"text","value":" directory."}]},{"type":"element","tag":"h2","props":{"id":"basic-component"},"children":[{"type":"text","value":"Basic Component"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Basic component is our understanding of a component in its simplest form,\nto create a basic component create the vue file "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"BasicComponent.vue"}]},{"type":"text","value":" in\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/components"}]},{"type":"text","value":" directory. To create more complex components this base\ncomponent can be used as a starting point. Then use this component in a page\nas shown in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/pages/demo/basic.vue"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/components/basic"},"children":[{"type":"text","value":"/demo/components/basic"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"defining-properties"},"children":[{"type":"text","value":"Defining Properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To add properties to a component, "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"defineProps"}]},{"type":"text","value":" can be used and type and default\nvalue can be set as shown in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./theme/components/ComponentWithProps.vue"}]},{"type":"text","value":". More\nproperties can be added later on. Values of these properties can be assigned\nwhen using the component with properties as shown in\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/demo/defining-props.vue"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/components/defining-props"},"children":[{"type":"text","value":"/demo/components/defining-props"}]}]},{"type":"element","tag":"h2","props":{"id":"emit-ref"},"children":[{"type":"text","value":"Emit & Ref"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Emit is the way to raise events from a component to its parent, like a click\nevent. Ref is used for reactivity, so when a state is expected to change use\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ref"}]},{"type":"text","value":" for changes to apply to the template immediately."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/components/emit-and-ref"},"children":[{"type":"text","value":"/demo/components/emit-and-ref"}]}]},{"type":"element","tag":"h2","props":{"id":"global-emit"},"children":[{"type":"text","value":"Global Emit"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To emit a global change, we use nuxt's state management. To achieve this;"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Introduce a state with its default value function as shown in\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/composables/states.js"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Import and modify it as shown in\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/components/ComponentThatEmitsGlobally.vue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Watch it as shown in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/pages/demo/components/global-emit.vue"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/components/global-emit"},"children":[{"type":"text","value":"/demo/components/global-emit"}]}]},{"type":"element","tag":"h2","props":{"id":"prose"},"children":[{"type":"text","value":"Prose"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Prose components are wrappers of html tags that are used to render markdown\ncontent. When you want to change the way nuxt renders markdown you need to\noverride a prose component."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To override a prose, let's say "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<table>"}]},{"type":"text","value":", browse to "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/content/blob/main/src/runtime/components/Prose/","rel":["nofollow"]},"children":[{"type":"text","value":"Nuxt Content /\nProse"}]},{"type":"text","value":"\nand copy corresponding component, "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ProseTable.vue"}]},{"type":"text","value":" in this case, and place it\nunder exactly the same path "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/components/Prose/"}]},{"type":"text","value":", and make any change you\nwant."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below is a demonstration of overriding "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ProseTable.vue"}]},{"type":"text","value":";"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Override"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"This"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Table"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Using"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Prose"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Components"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"To"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Add"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"Border"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":":information_source:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You need to configure "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"~/components/Prose"}]},{"type":"text","value":" as a global directory to enable\nthis. See "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".theme/nuxt.config.ts"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"slot-manipulation"},"children":[{"type":"text","value":"Slot Manipulation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We need this one to create an alarm component out of a blockquote with an icon\nin its first line like below;"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":":warning:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo warning message"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Content of this blockquote is passed to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ProseBlockquote"}]},{"type":"text","value":" component in\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<slot/>"}]},{"type":"text","value":". To parse the first line of this slot, we used "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useSlots"}]},{"type":"text","value":" in script\nwhere nuxt gives access to element tree of a markdown content."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<slot/>"}]},{"type":"text","value":" does not allow to manipulate its content, so we used "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"<component :is=\"...\"/>"}]},{"type":"text","value":" instead. This is the way to render a slot that is programmatically\nchanged or created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Other types demonstrated below;"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":":information_source:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo info message"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo default message"}]}]},{"type":"element","tag":"h2","props":{"id":"provide-inject"},"children":[{"type":"text","value":"Provide & Inject"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When you need to access a data that cannot be passed to a component (such as\nprose components), we use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"provide"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inject"}]},{"type":"text","value":" functions. Basically you\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"provide"}]},{"type":"text","value":" a value in a parent component to be "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inject"}]},{"type":"text","value":"ed in any child\ncomponents."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"diagram","src":"./components-1.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/provide-and-inject"},"children":[{"type":"text","value":"/demo/provide-and-inject"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"basic-component","depth":2,"text":"Basic Component"},{"id":"defining-properties","depth":2,"text":"Defining Properties"},{"id":"emit-ref","depth":2,"text":"Emit & Ref"},{"id":"global-emit","depth":2,"text":"Global Emit"},{"id":"prose","depth":2,"text":"Prose"},{"id":"slot-manipulation","depth":2,"text":"Slot Manipulation"},{"id":"provide-inject","depth":2,"text":"Provide & Inject"}]}},"_type":"markdown","_id":"content:components.md","_source":"content","_file":"components.md","_extension":"md"}