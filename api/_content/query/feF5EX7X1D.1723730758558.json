{"_path":"/network","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Network","description":"Below you can see how we do things related to the network.","position":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"network"},"children":[{"type":"text","value":"Network"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below you can see how we do things related to the network."}]},{"type":"element","tag":"h2","props":{"id":"fetching-data"},"children":[{"type":"text","value":"Fetching Data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use Nuxt's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" operations for our data fetches. To streamline the\nmanagement and readability of tasks like specifying URLs, setting headers, and\ndefining options in such operations, we prefer keeping them in a separate area.\nNuxt examples use the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"composables"}]},{"type":"text","value":" folder for these functions, and we follow\nsuit. This folder is also a practical choice because of its automatic import\nfeature."}]},{"type":"element","tag":"h3","props":{"id":"fetch-once-server-or-client"},"children":[{"type":"text","value":"Fetch Once - Server or Client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We do the one-time fetch operations on the server side and bring them to the\nclient side by making the server side of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" true. Use this method if\nthis data is not expected to change frequently."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":":info:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We experienced issues when using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ContentQuery"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" within\nscript setup, we solved the issue by using "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"async"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"await"}]},{"type":"text","value":" keywords when\ninvoking async function in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useAsyncData()"}]}]},{"type":"element","tag":"pre","props":{"className":["language-javascript"],"code":"await useAsyncData(async () => await ...);\n","language":"javascript","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"await useAsyncData(async () => await ...);\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"fetch-once-only-client"},"children":[{"type":"text","value":"Fetch Once - Only Client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onMounted"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onBeforeMount"}]},{"type":"text","value":" etc. methods for the fetch operations\nrequested to be done on the client side. Use this method if this data is likely\nto change frequently and there are no SEO concerns for the content."}]},{"type":"element","tag":"h3","props":{"id":"fetch-twice-server-and-client"},"children":[{"type":"text","value":"Fetch Twice - Server and Client"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onServerPrefetch"}]},{"type":"text","value":" for the fetch operation during site generation, and\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onMounted"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onBeforeMount"}]},{"type":"text","value":" for the operation to be performed on the client\nside. We use this method if this data is likely to change and there are SEO\nconcerns."}]},{"type":"element","tag":"h3","props":{"id":"requests-in-composables"},"children":[{"type":"text","value":"Requests in Composables"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We group the requests under composables with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"use"}]},{"type":"text","value":" prefix. In this way, we\nfollow the same naming convention as Nuxt."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Where we group the endpoints under an unnamed function and return them. This way\nNuxt automatically imports them with the same file name. When we want to use it,\nwe can call it with the name we grouped and use it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/composables/useGitHub.js"}]},{"type":"text","value":", for example send requests."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Demo is at "},{"type":"element","tag":"a","props":{"href":"/demo/fetching-data/"},"children":[{"type":"text","value":"/demo/fetching-data"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"fetching-data","depth":2,"text":"Fetching Data","children":[{"id":"fetch-once-server-or-client","depth":3,"text":"Fetch Once - Server or Client"},{"id":"fetch-once-only-client","depth":3,"text":"Fetch Once - Only Client"},{"id":"fetch-twice-server-and-client","depth":3,"text":"Fetch Twice - Server and Client"},{"id":"requests-in-composables","depth":3,"text":"Requests in Composables"}]}]}},"_type":"markdown","_id":"content:network.md","_source":"content","_file":"network.md","_stem":"network","_extension":"md"}