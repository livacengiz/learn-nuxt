export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae){return {data:{"content-query-IHEGqZI4XK":[{_path:"\u002Fcontent",title:"Content",position:1},{_path:"\u002Fpages",title:"Pages",position:e},{_path:"\u002Fvue-files",title:"Vue Files",position:o},{_path:w,title:n,position:x},{_path:"\u002Frouting",title:"Routing",position:5},{_path:"\u002Fconfiguration",title:"Configuration",position:6},{_path:"\u002Fsetup-guide",title:"Setup Guide",position:100},{_path:"\u002Fbuild-and-run",title:"Build & Run",position:101},{_path:"\u002Fcontributing",title:"Contributing",position:102}],"content-query-IGYniFpqan":{_path:w,_dir:p,_draft:q,_partial:q,_locale:p,_empty:q,title:n,description:"Components are reusable pieces which can be created manually using built in\ncomponents. Creating components gives you flexibility in designing your UI.\nTo create a component, create a vue file in .theme\u002Fcomponents directory.",position:x,body:{type:"root",children:[{type:b,tag:"h1",props:{id:"components"},children:[{type:a,value:n}]},{type:b,tag:c,props:{},children:[{type:a,value:"Components are reusable pieces which can be created manually using built in\ncomponents. Creating components gives you flexibility in designing your UI.\nTo create a component, create a vue file in "},{type:b,tag:d,props:{},children:[{type:a,value:y}]},{type:a,value:" directory."}]},{type:b,tag:h,props:{id:z},children:[{type:a,value:A}]},{type:b,tag:c,props:{},children:[{type:a,value:"Basic component is our understanding of a component in its simplest form,\nto create a basic component create the vue file "},{type:b,tag:d,props:{},children:[{type:a,value:"BasicComponent.vue"}]},{type:a,value:" in\n"},{type:b,tag:d,props:{},children:[{type:a,value:y}]},{type:a,value:" directory. To create more complex components this base\ncomponent can be used as a starting point. Then use this component in a page\nas shown in "},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fpages\u002Fdemo\u002Fbasic.vue"}]},{type:a,value:l}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:B},children:[{type:a,value:B}]},{type:a,value:l}]},{type:b,tag:h,props:{id:C},children:[{type:a,value:D}]},{type:b,tag:c,props:{},children:[{type:a,value:"To add properties to a component, "},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:" can be used and type and default\nvalue can be set as shown in "},{type:b,tag:d,props:{},children:[{type:a,value:".\u002Ftheme\u002Fcomponents\u002FComponentWithProps.vue"}]},{type:a,value:". More\nproperties can be added later on. Values of these properties can be assigned\nwhen using the component with properties as shown in\n"},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fdemo\u002Fdefining-props.vue"}]}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:b,tag:c,props:{},children:[{type:a,value:"When we use "},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:", we prefer the language to be "},{type:b,tag:d,props:{},children:[{type:a,value:"typescript"}]},{type:a,value:" to keep\nthe props type-safe."}]}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:E},children:[{type:a,value:E}]}]},{type:b,tag:F,props:{id:G},children:[{type:a,value:H}]},{type:b,tag:c,props:{},children:[{type:a,value:"Complex types can be used with "},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:" as seen in\n"},{type:b,tag:d,props:{},children:[{type:a,value:".\u002Ftheme\u002Fcomponents\u002FComponentWithTypedProp.vue"}]},{type:a,value:l}]},{type:b,tag:c,props:{},children:[{type:a,value:"Demo is at\n"},{type:b,tag:f,props:{href:I},children:[{type:a,value:I}]}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:b,tag:c,props:{},children:[{type:a,value:"For type instances in your scripts to work, script language should be set\nto TypeScript. "},{type:b,tag:f,props:{href:"https:\u002F\u002Fnuxt.com\u002Fdocs\u002Fapi\u002Fconfiguration\u002Fnuxt-config#typecheck",rel:[J]},children:[{type:a,value:"TypeCheck"}]},{type:a,value:" should be enabled. If you have enabled type\nchecking in your project required properties are enforced during compile."}]}]},{type:b,tag:F,props:{id:K},children:[{type:a,value:L}]},{type:b,tag:c,props:{},children:[{type:a,value:"To reuse types, create a "},{type:b,tag:d,props:{},children:[{type:a,value:"types"}]},{type:a,value:" folder at the root of the project, and create\nan "},{type:b,tag:d,props:{},children:[{type:a,value:M}]},{type:a,value:" file to export types. You can add your types in this folder and\nexport them via "},{type:b,tag:d,props:{},children:[{type:a,value:M}]},{type:a,value:", see "},{type:b,tag:d,props:{},children:[{type:a,value:".\u002Ftheme\u002Ftypes\u002FDemo.ts"}]},{type:a,value:". These types can be\nused in components as seen in "},{type:b,tag:d,props:{},children:[{type:a,value:".\u002Ftheme\u002Fcomponents\u002FComponentThatReusesType.vue"}]}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:N},children:[{type:a,value:N}]}]},{type:b,tag:h,props:{id:O},children:[{type:a,value:P}]},{type:b,tag:c,props:{},children:[{type:a,value:"Emit is the way to raise events from a component to its parent, like a click\nevent. Ref is used for reactivity, so when a state is expected to change use\n"},{type:b,tag:d,props:{},children:[{type:a,value:"ref"}]},{type:a,value:" for changes to apply to the template immediately."}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:Q},children:[{type:a,value:Q}]}]},{type:b,tag:h,props:{id:R},children:[{type:a,value:S}]},{type:b,tag:c,props:{},children:[{type:a,value:"To emit a global change, we use nuxt's state management. To achieve this;"}]},{type:b,tag:"ol",props:{},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Introduce a state with its default value function as shown in\n"},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fcomposables\u002Fstates.js"}]}]},{type:b,tag:s,props:{},children:[{type:a,value:"Import and modify it as shown in\n"},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fcomponents\u002FComponentThatEmitsGlobally.vue"}]}]},{type:b,tag:s,props:{},children:[{type:a,value:"Watch it as shown in "},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fpages\u002Fdemo\u002Fcomponents\u002Fglobal-emit.vue"}]}]}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:T},children:[{type:a,value:T}]}]},{type:b,tag:h,props:{id:U},children:[{type:a,value:t}]},{type:b,tag:c,props:{},children:[{type:a,value:"Prose components are wrappers of html tags that are used to render markdown\ncontent. When you want to change the way nuxt renders markdown you need to\noverride a prose component."}]},{type:b,tag:c,props:{},children:[{type:a,value:"To override a prose, let's say "},{type:b,tag:d,props:{},children:[{type:a,value:"\u003Ctable\u003E"}]},{type:a,value:", browse to "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fcontent\u002Fblob\u002Fmain\u002Fsrc\u002Fruntime\u002Fcomponents\u002FProse\u002F",rel:[J]},children:[{type:a,value:"Nuxt Content \u002F\nProse"}]},{type:a,value:"\nand copy corresponding component, "},{type:b,tag:d,props:{},children:[{type:a,value:V}]},{type:a,value:" in this case, and place it\nunder exactly the same path "},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fcomponents\u002FProse\u002F"}]},{type:a,value:", and make any change you\nwant."}]},{type:b,tag:c,props:{},children:[{type:a,value:"Below is a demonstration of overriding "},{type:b,tag:d,props:{},children:[{type:a,value:V}]},{type:a,value:";"}]},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:u,props:{},children:[{type:b,tag:v,props:{align:g},children:[{type:a,value:"Override"}]},{type:b,tag:v,props:{align:g},children:[{type:a,value:"This"}]},{type:b,tag:v,props:{align:g},children:[{type:a,value:"Table"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:u,props:{},children:[{type:b,tag:k,props:{align:g},children:[{type:a,value:"Using"}]},{type:b,tag:k,props:{align:g},children:[{type:a,value:t}]},{type:b,tag:k,props:{align:g},children:[{type:a,value:n}]}]},{type:b,tag:u,props:{},children:[{type:b,tag:k,props:{align:g},children:[{type:a,value:"To"}]},{type:b,tag:k,props:{align:g},children:[{type:a,value:"Add"}]},{type:b,tag:k,props:{align:g},children:[{type:a,value:"Border"}]}]}]}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:b,tag:c,props:{},children:[{type:a,value:"You need to configure "},{type:b,tag:d,props:{},children:[{type:a,value:"~\u002Fcomponents\u002FProse"}]},{type:a,value:" as a global directory to enable\nthis. See "},{type:b,tag:d,props:{},children:[{type:a,value:".theme\u002Fnuxt.config.ts"}]},{type:a,value:l}]}]},{type:b,tag:h,props:{id:W},children:[{type:a,value:X}]},{type:b,tag:c,props:{},children:[{type:a,value:"We need this one to create an alarm component out of a blockquote with an icon\nin its first line like below;"}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:":warning:"}]},{type:b,tag:c,props:{},children:[{type:a,value:"Demo warning message"}]}]},{type:b,tag:c,props:{},children:[{type:a,value:"Content of this blockquote is passed to "},{type:b,tag:d,props:{},children:[{type:a,value:"ProseBlockquote"}]},{type:a,value:" component in\n"},{type:b,tag:d,props:{},children:[{type:a,value:Y}]},{type:a,value:". To parse the first line of this slot, we used "},{type:b,tag:d,props:{},children:[{type:a,value:"useSlots"}]},{type:a,value:" in script\nwhere nuxt gives access to element tree of a markdown content."}]},{type:b,tag:c,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:Y}]},{type:a,value:" does not allow to manipulate its content, so we used "},{type:b,tag:d,props:{},children:[{type:a,value:"\u003Ccomponent :is=\"...\"\u002F\u003E"}]},{type:a,value:" instead. This is the way to render a slot that is programmatically\nchanged or created."}]},{type:b,tag:c,props:{},children:[{type:a,value:"Other types demonstrated below;"}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:b,tag:c,props:{},children:[{type:a,value:"Demo info message"}]}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Demo default message"}]}]},{type:b,tag:h,props:{id:Z},children:[{type:a,value:_}]},{type:b,tag:c,props:{},children:[{type:a,value:"When you need to access a data that cannot be passed to a component (such as\nprose components), we use "},{type:b,tag:d,props:{},children:[{type:a,value:$}]},{type:a,value:" and "},{type:b,tag:d,props:{},children:[{type:a,value:aa}]},{type:a,value:" functions. Basically you\n"},{type:b,tag:d,props:{},children:[{type:a,value:$}]},{type:a,value:" a value in a parent component to be "},{type:b,tag:d,props:{},children:[{type:a,value:aa}]},{type:a,value:"ed in any child\ncomponents."}]},{type:b,tag:c,props:{},children:[{type:b,tag:"img",props:{alt:"diagram",src:".\u002Fcomponents-1.png"},children:[]}]},{type:b,tag:c,props:{},children:[{type:a,value:j},{type:b,tag:f,props:{href:ab},children:[{type:a,value:ab}]}]},{type:b,tag:h,props:{id:ac},children:[{type:a,value:ad}]},{type:b,tag:c,props:{},children:[{type:a,value:"We use Content Transformers when we want to manipulate the html content of a\nmarkdown content before it is rendered, after it is parsed."}]},{type:b,tag:c,props:{},children:[{type:a,value:ae},{type:b,tag:f,props:{href:"\u002Fdemo\u002Ftransformer\u002F"},children:[{type:a,value:"\u002Fdemo\u002Ftransformer"}]},{type:a,value:" to see what can be done."}]},{type:b,tag:c,props:{},children:[{type:a,value:ae},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Ftransformers\u002Foptimus-prime.ts"}]},{type:a,value:" to see how it is done."}]},{type:b,tag:i,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:m}]},{type:b,tag:c,props:{},children:[{type:a,value:"For Content Transformers to work, we need to register them in Nuxt and add\nthem as modules. You can see how we register them in\n"},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Ftransformers\u002Ftransform-module.ts"}]},{type:a,value:" and how we add them as modules in\n"},{type:b,tag:d,props:{},children:[{type:a,value:"nuxt.config.ts"}]},{type:a,value:l}]}]}],toc:{title:p,searchDepth:e,depth:e,links:[{id:z,depth:e,text:A},{id:C,depth:e,text:D,children:[{id:G,depth:o,text:H},{id:K,depth:o,text:L}]},{id:O,depth:e,text:P},{id:R,depth:e,text:S},{id:U,depth:e,text:t},{id:W,depth:e,text:X},{id:Z,depth:e,text:_},{id:ac,depth:e,text:ad}]}},_type:"markdown",_id:"content:components.md",_source:"content",_file:"components.md",_extension:"md"}},prerenderedAt:1696344684757}}("text","element","p","code-inline",2,"a",null,"h2","blockquote","Demo is at ","td",".",":information_source:","Components",3,"",false,"defineProps","li","Prose","tr","th","\u002Fcomponents",4,".theme\u002Fcomponents","basic-component","Basic Component","\u002Fdemo\u002Fcomponents\u002Fbasic","defining-properties","Defining Properties","\u002Fdemo\u002Fcomponents\u002Fdefining-props","h3","complex-type-props","Complex Type Props","\u002Fdemo\u002Fcomponents\u002Fcomplex-type-props","nofollow","reusing-types","Reusing Types","index.ts","\u002Fdemo\u002Fcomponents\u002Freusing-types","emit-ref","Emit & Ref","\u002Fdemo\u002Fcomponents\u002Femit-and-ref","global-emit","Global Emit","\u002Fdemo\u002Fcomponents\u002Fglobal-emit","prose","ProseTable.vue","slot-manipulation","Slot Manipulation","\u003Cslot\u002F\u003E","provide-inject","Provide & Inject","provide","inject","\u002Fdemo\u002Fprovide-and-inject","content-transformer","Content Transformer","See "))